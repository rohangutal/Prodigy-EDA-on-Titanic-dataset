import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the Titanic dataset
df = pd.read_csv('titanic_dataset.csv')

# Step 1: Data Cleaning

# 1. Check for missing values
print("Missing values before cleaning:")
print(df.isnull().sum())

# 2. Handle missing values
# Fill missing 'Age' with the median
df['Age'].fillna(df['Age'].median(), inplace=True)

# Fill missing 'Embarked' with the most frequent value (mode)
df['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)

# Drop rows where 'Cabin' is missing
df.dropna(subset=['Cabin'], inplace=True)

# 3. Handle duplicates
df.drop_duplicates(inplace=True)

# 4. Convert categorical variables to 'category' dtype
df['Pclass'] = df['Pclass'].astype('category')
df['Sex'] = df['Sex'].astype('category')
df['Embarked'] = df['Embarked'].astype('category')

# Step 2: Exploratory Data Analysis (EDA)

# 1. Basic Summary Statistics
print("\nSummary Statistics:")
print(df.describe())

# 2. Visualize Distribution of 'Age'
plt.figure(figsize=(10, 6))
sns.histplot(df['Age'], kde=True, bins=30)
plt.title('Distribution of Age')
plt.show()

# 3. Visualize Distribution of 'Fare'
plt.figure(figsize=(10, 6))
sns.histplot(df['Fare'], kde=True, bins=30)
plt.title('Distribution of Fare')
plt.show()

# Select only numeric columns
numeric_df = df.select_dtypes(include=['number'])

# 4.Compute the correlation matrix
correlation_matrix = numeric_df.corr()

# Plot the heatmap
plt.figure(figsize=(10, 6))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title("Correlation Matrix")
plt.show()

# 5. Survival Rate by Gender
plt.figure(figsize=(8, 6))
sns.barplot(x='Sex', y='Survived', data=df)
plt.title('Survival Rate by Gender')
plt.show()

# 6. Survival Rate by Passenger Class (Pclass)
plt.figure(figsize=(8, 6))
sns.barplot(x='Pclass', y='Survived', data=df)
plt.title('Survival Rate by Passenger Class')
plt.show()

# 7. Survival Rate by Age
plt.figure(figsize=(8, 6))
sns.boxplot(x='Survived', y='Age', data=df)
plt.title('Survival Rate by Age')
plt.show()

# 8. Survival Rate by Embarked
plt.figure(figsize=(8, 6))
sns.barplot(x='Embarked', y='Survived', data=df)
plt.title('Survival Rate by Embarked')
plt.show()

# 9. Fare Distribution by Survival
plt.figure(figsize=(8, 6))
sns.boxplot(x='Survived', y='Fare', data=df)
plt.title('Fare Distribution by Survival')
plt.show()

# 10. Feature Engineering: Extract Titles from Name column
df['Title'] = df['Name'].apply(lambda x: x.split(',')[1].split('.')[0].strip())

# 11. Feature Engineering: Create Family Size feature
df['FamilySize'] = df['SibSp'] + df['Parch']

# 12. Pairplot of Selected Features
sns.pairplot(df[['Age', 'Fare', 'Survived', 'Pclass']])
plt.title('Pairplot of Selected Features')
plt.show()

# Step 3: Identify Patterns and Trends

# Analysis of Survival Rates
# 1. Survival rate by gender
gender_survival = df.groupby('Sex')['Survived'].mean()
print("\nSurvival rate by Gender:")
print(gender_survival)

# 2. Survival rate by Passenger Class (Pclass)
pclass_survival = df.groupby('Pclass')['Survived'].mean()
print("\nSurvival rate by Passenger Class:")
print(pclass_survival)

# 3. Survival rate by Age group
df['AgeGroup'] = pd.cut(df['Age'], bins=[0, 12, 18, 30, 50, 80], labels=['Child', 'Teen', 'Young Adult', 'Adult', 'Senior'])
agegroup_survival = df.groupby('AgeGroup')['Survived'].mean()
print("\nSurvival rate by Age Group:")
print(agegroup_survival)

# 4. Survival rate by Embarked
embarked_survival = df.groupby('Embarked')['Survived'].mean()
print("\nSurvival rate by Embarked:")
print(embarked_survival)

# 5. Survival rate by Family Size
family_size_survival = df.groupby('FamilySize')['Survived'].mean()
print("\nSurvival rate by Family Size:")
print(family_size_survival)

